CREATE TABLE IF NOT EXISTS "data" (
"index" INTEGER,
"Issue Code" INTEGER,
"Issue Name" TEXT,
"Put^Call" TEXT,
"Contract Month" INTEGER,
"Strike Price" REAL,
"Settlement Price" REAL,
"Theoretical Price" REAL,
"Underlying Index" REAL,
"Volatility " REAL,
"Interest Rate" REAL,
"Days until Maturity" INTEGER,
"Underlying Name" TEXT
);

CREATE TABLE IF NOT EXISTS "data1" (
"index" INTEGER,
"DATE1" TIMESTAMP,
"YEAR" INTEGER,
"MONTH" INTEGER,
"EXPIR" REAL,
"STRIKE" REAL,
"cRIC" TEXT,
"pRIC" TEXT,
"cBID_RH" TEXT,
"cBID_TS" TIMESTAMP,
"cBID_V" REAL,
"cASK_RH" TEXT,
"cASK_TS" TIMESTAMP,
"cASK_V" REAL,
"cSTL_RH" TEXT,
"cSTL_TS" TEXT,
"cSTL_V" REAL,
"pBID_RH" TEXT,
"pBID_TS" TIMESTAMP,
"pBID_V" REAL,
"pASK_RH" TEXT,
"pASK_TS" TIMESTAMP,
"pASK_V" REAL,
"pSTL_RH" TEXT,
"pSTL_TS" TEXT,
"pSTL_V" REAL,
"fRIC" TEXT,
"fSTL_RH" TEXT,
"fSTL_TS" TIMESTAMP,
"fSTL_V" REAL
);


CREATE TABLE public.DATA_SET (
	DATA_SET_ID BIGINT NOT NULL,
	DATA_SET_NAME VARCHAR NOT NULL,
	CONSTRAINT data_set_pk PRIMARY KEY (DATA_SET_ID)
);
COMMENT ON TABLE DATA_SET IS 'Данные для обучения моделей';
COMMENT ON COLUMN DATA_SET.DATA_SET_NAME IS 'Если формируется на основе RATES_HISTORY - [RATES_NAME] + [RATES_DATE]';


CREATE TABLE IF NOT EXISTS DATA_SET_COMPONENT (
	COMPONENT_ID BIGINT NOT NULL,
	DATA_SET_ID BIGINT NOT NULL,
	COMPONENT_TYPE CHAR NOT NULL,
	COMPONENT_INDEX INTEGER NOT NULL,
	COMPONENT_NAME VARCHAR NOT NULL,
	TAG VARCHAR,
	CONSTRAINT data_set_component_pk PRIMARY KEY (COMPONENT_ID, DATA_SET_ID)
);
COMMENT ON TABLE DATA_SET_COMPONENT IS 'Описание вектора обучающей выборки';
COMMENT ON COLUMN DATA_SET_COMPONENT.COMPONENT_TYPE IS '[I] - компонента входного вектора; [O] - компонента выходного вектора';
COMMENT ON COLUMN DATA_SET_COMPONENT.COMPONENT_INDEX IS 'Порядковый номер компоненты в векторе';
COMMENT ON COLUMN DATA_SET_COMPONENT.COMPONENT_NAME IS 'Название компонента вектора';
COMMENT ON COLUMN DATA_SET_COMPONENT.TAG IS 'В случае если данные формируются автоматически из RATES_HISTORY, то формируется описание источника ( скриптом на Python)';



CREATE TABLE IF NOT EXISTS DATA_SET_VALUES (
	COMPONENT_ID BIGINT NOT NULL,
	DATA_SET_ID BIGINT NOT NULL,
	VECTOR_ID BIGINT NOT NULL,
	DATA_SET_VALUE DOUBLE PRECISION NOT NULL,
	CONSTRAINT data_set_values_pk PRIMARY KEY (COMPONENT_ID, DATA_SET_ID, VECTOR_ID)
);
COMMENT ON TABLE DATA_SET_VALUES IS 'Значения элементов обучающей выборки';
COMMENT ON COLUMN DATA_SET_VALUES.VECTOR_ID IS 'Номер входного вектора или пары векторов обучающей выборки';
COMMENT ON COLUMN DATA_SET_VALUES.DATA_SET_VALUE IS 'Значение элемента обучающей выборки';


CREATE TABLE IF NOT EXISTS MODEL (
	MODEL_ID BIGINT NOT NULL,
	MODEL_NAME VARCHAR NOT NULL,
	DESCRIPTION VARCHAR,
	MODEL_TYPE CHAR NOT NULL,
	CONSTRAINT model_pk PRIMARY KEY (MODEL_ID)
);
COMMENT ON TABLE MODEL IS 'Таблица MODEL описания модели анализа данных';
COMMENT ON COLUMN MODEL.MODEL_TYPE IS '[P] - Нейронная сеть библиотекта PBrain; [K] - Нейронная сеть библиотекта Keras; [F] - модель Fuzzy Logic';


CREATE TABLE IF NOT EXISTS MODEL_2_DATA_SET (
	MODEL_ID BIGINT NOT NULL,
	DATA_SET_ID BIGINT NOT NULL,
	CONSTRAINT model_2_data_set_pk PRIMARY KEY (MODEL_ID, DATA_SET_ID)
);



CREATE TABLE IF NOT EXISTS SOURCE (
	SOURCE_ID BIGINT NOT NULL,
	SOURCE_NAME VARCHAR,
	CONSTRAINT source_pk PRIMARY KEY (SOURCE_ID)
);



CREATE TABLE IF NOT EXISTS CATEGORY (
	CATEGORY_ID BIGINT NOT NULL,
	CATEGORY_NAME VARCHAR NOT NULL,
	DESCRIPTION VARCHAR,
	Parent_CATEGORY_ID BIGINT,
	CONSTRAINT category_pk PRIMARY KEY (CATEGORY_ID)
);
COMMENT ON COLUMN CATEGORY.CATEGORY_ID IS 'уникальный ID категория';
COMMENT ON COLUMN CATEGORY.CATEGORY_NAME IS 'короткое название категории';
COMMENT ON COLUMN CATEGORY.DESCRIPTION IS 'описание категории ( по умолчанию NULL)';
COMMENT ON COLUMN CATEGORY.Parent_CATEGORY_ID IS 'ID родительской категории из этой же таблицы (для создания иерархии категорий)';



CREATE TABLE IF NOT EXISTS RATES (
	RATES_ID BIGINT NOT NULL,
	SOURCE_ID BIGINT,
	CATEGORY_CATEGORY_ID BIGINT NOT NULL,
	RATES_NAME VARCHAR NOT NULL,
	TAG VARCHAR,
	CONSTRAINT rates_pk PRIMARY KEY (RATES_ID, TAG)
);
COMMENT ON TABLE RATES IS 'Таблица RATES (описание параметра)';
COMMENT ON COLUMN RATES.RATES_ID IS 'уникальный ID параметра';
COMMENT ON COLUMN RATES.CATEGORY_CATEGORY_ID IS 'ID категории к которому относится параметр';
COMMENT ON COLUMN RATES.RATES_NAME IS 'короткое название параметра';
COMMENT ON COLUMN RATES.TAG IS 'тэг параметра (для быстрого поиска) - по умолчанию NULL';


CREATE TABLE IF NOT EXISTS RATES_HISTORY (
	RATES_ID BIGINT NOT NULL,
	RATES_DATE TIMESTAMP NOT NULL,
	RATES_VALUE_DOUBLE DOUBLE PRECISION,
	RATES_VALUE_CHAR VARCHAR,
	TAG VARCHAR,
	CONSTRAINT rates_history_pk PRIMARY KEY (RATES_ID, RATES_DATE)
);
COMMENT ON TABLE RATES_HISTORY IS 'Таблица RATES_HISTORY (история значений параметра)';
COMMENT ON COLUMN RATES_HISTORY.RATES_ID IS 'уникальный ID параметра к которому относится запись';
COMMENT ON COLUMN RATES_HISTORY.RATES_DATE IS 'дата и время (если применимо) записи значения параметра';
COMMENT ON COLUMN RATES_HISTORY.RATES_VALUE_DOUBLE IS 'значение параметра на заданную дату и время (если применимо)';
COMMENT ON COLUMN RATES_HISTORY.TAG IS 'тэг значения параметра (для сквозной группировки) - по умолчанию NULL';


ALTER TABLE  DATA_SET_COMPONENT ADD CONSTRAINT data_set_data_set_component_fk
FOREIGN KEY (DATA_SET_ID)
REFERENCES DATA_SET (DATA_SET_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

ALTER TABLE MODEL_2_DATA_SET ADD CONSTRAINT data_set_model_2_data_set_fk
FOREIGN KEY (DATA_SET_ID)
REFERENCES DATA_SET (DATA_SET_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

ALTER TABLE DATA_SET_VALUES ADD CONSTRAINT data_set_component_data_set_values_fk
FOREIGN KEY (COMPONENT_ID, DATA_SET_ID)
REFERENCES DATA_SET_COMPONENT (COMPONENT_ID, DATA_SET_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

ALTER TABLE MODEL_2_DATA_SET ADD CONSTRAINT model_model_2_data_set_fk
FOREIGN KEY (MODEL_ID)
REFERENCES MODEL (MODEL_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

ALTER TABLE RATES ADD CONSTRAINT source_rates_fk
FOREIGN KEY (SOURCE_ID)
REFERENCES SOURCE (SOURCE_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

ALTER TABLE RATES ADD CONSTRAINT category_rates_fk
FOREIGN KEY (CATEGORY_CATEGORY_ID)
REFERENCES CATEGORY (CATEGORY_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

ALTER TABLE CATEGORY ADD CONSTRAINT category_category_fk
FOREIGN KEY (Parent_CATEGORY_ID)
REFERENCES CATEGORY (CATEGORY_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

ALTER TABLE RATES_HISTORY ADD CONSTRAINT rates_rates_history_fk
FOREIGN KEY (RATES_ID)
REFERENCES RATES (RATES_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;
